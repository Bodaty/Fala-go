// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocknetwork

import (
	flow "github.com/onflow/flow-go/model/flow"
	mock "github.com/stretchr/testify/mock"

	network "github.com/onflow/flow-go/network"
)

// Adapter is an autogenerated mock type for the Adapter type
type Adapter struct {
	mock.Mock
}

// PublishOnChannel provides a mock function with given fields: _a0, _a1, _a2
func (_m *Adapter) PublishOnChannel(_a0 network.Channel, _a1 interface{}, _a2 ...flow.Identifier) error {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(network.Channel, interface{}, ...flow.Identifier) error); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UnRegisterChannel provides a mock function with given fields: channel
func (_m *Adapter) UnRegisterChannel(channel network.Channel) error {
	ret := _m.Called(channel)

	var r0 error
	if rf, ok := ret.Get(0).(func(network.Channel) error); ok {
		r0 = rf(channel)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
